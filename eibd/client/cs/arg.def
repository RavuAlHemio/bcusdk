/*
    EIBD client library
    Copyright (C) 2005-2011 Martin Koegler <mkoegler@auto.tuwien.ac.at>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    In addition to the permissions in the GNU General Public License, 
    you may link the compiled version of this file into combinations
    with other programs, and distribute those combinations without any 
    restriction coming from the use of this file. (The General Public 
    License restrictions do apply in other respects; for example, they 
    cover modification of the file, and distribution when not linked into 
    a combine executable.)

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

#define AGARG_NONE
#define AGARG_BOOL(name, args) bool name KAG ## args
#define AGARG_UINT8(name, args) byte name KAG ## args
#define AGARG_UINT8a(name, args) byte name KAG ## args
#define AGARG_UINT8b(name, args) byte name KAG ## args
#define AGARG_UINT16(name, args) ushort name KAG ## args
#define AGARG_OUTUINT8(name, args) UInt8 name KAG ## args
#define AGARG_OUTUINT8a(name, args) UInt8 name KAG ## args
#define AGARG_OUTUINT16(name, args) UInt16 name KAG ## args
#define AGARG_OUTUINT32(name, args) UInt32 name KAG ## args
#define AGARG_OUTINT16(name, args) Int16 name KAG ## args
#define AGARG_ADDR(name, args) ushort name KAG ## args
#define AGARG_OUTADDR(name, args) EIBAddr name KAG ## args
#define AGARG_OUTADDRa(name, args) EIBAddr name KAG ## args
#define AGARG_INBUF(name, args) byte[] name KAG ## args
#define AGARG_OUTBUF(name, args) EIBBuffer name KAG ## args
#define AGARG_OUTBUF_LEN(name, args) int name##_len, EIBBuffer name KAG ## args
#define AGARG_KEY(name, args) byte[] name KAG ## args

#define ALARG_NONE
#define ALARG_BOOL(name, args) name KAL ## args
#define ALARG_UINT8(name, args) name KAL ## args
#define ALARG_UINT8a(name, args) name KAL ## args
#define ALARG_UINT8b(name, args) name KAL ## args
#define ALARG_UINT16(name, args) name KAL ## args
#define ALARG_OUTUINT8(name, args) name KAL ## args
#define ALARG_OUTUINT8a(name, args) name KAL ## args
#define ALARG_OUTUINT16(name, args) name KAL ## args
#define ALARG_OUTINT16(name, args) name KAL ## args
#define ALARG_OUTUINT32(name, args) name KAL ## args
#define ALARG_ADDR(name, args) name KAL ## args
#define ALARG_OUTADDR(name, args) name KAL ## args
#define ALARG_OUTADDRa(name, args) name KAL ## args
#define ALARG_INBUF(name, args) name KAL ## args
#define ALARG_OUTBUF(name, args) name KAL ## args
#define ALARG_OUTBUF_LEN(name, args) name##_len, name KAL ## args
#define ALARG_KEY(name, args) name KAL ## args
